@inject TodoClient Client
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

@if (!string.IsNullOrEmpty(CurrentUser))
{
    <div class="min-h-screen flex flex-col transition-colors @IsDarkCssClass">
        <div class="flex-initial">
            <NavBar DarkMode="@_isDarkMode" CurrentUser="@CurrentUser" LoggedOut="@Logout" DarkModeChanged="DarkModeChanged" />
        </div>
        <div class="flex-1">
            <TodoList OnForbidden="@Logout" />    
        </div>
    </div>
}
else
{
    <LogInForm OnLoggedIn="@HandleLogin" />
}
@code {
    [Parameter] public string? CurrentUser { get; set; }

    string? IsDarkCssClass => _isDarkMode ? "dark" : null;
    bool _isDarkMode;

    void HandleLogin(string newUsername)
    {
        CurrentUser = newUsername;
    }

    async Task Logout()
    {
        if (await Client.LogoutAsync())
        {
            CurrentUser = null;
        }
    }

    private async Task DarkModeChanged()
    {
        _isDarkMode = !_isDarkMode;
        await LocalStorage.SetItemAsync("darkMode", _isDarkMode);
    }

    protected override async Task OnInitializedAsync()
    {
        _isDarkMode = await LocalStorage.GetItemAsync<bool>("darkMode");
    }

}
